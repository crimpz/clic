-- Users
CREATE TABLE users
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    username varchar(128) NOT NULL UNIQUE,
    pwd varchar(256),
    pwd_salt uuid NOT NULL DEFAULT gen_random_uuid(),
    token_salt uuid NOT NULL DEFAULT gen_random_uuid()
);

-- Text Rooms
CREATE TABLE rooms
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    room_type varchar(5) NOT NULL,
    title varchar(256) NOT NULL

);

-- Chat Messages
CREATE TABLE messages
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    message_text TEXT NOT NULL,
    message_datetime TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    message_room_id BIGINT NOT NULL,
    message_user_id BIGINT NOT NULL,

    FOREIGN KEY (message_room_id) REFERENCES rooms(id) ON DELETE CASCADE,
    FOREIGN KEY (message_user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE room_participants (
    room_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    joined_at TIMESTAMPTZ DEFAULT now(),
    PRIMARY KEY (room_id, user_id)
);

-- Images
CREATE TABLE images (
    id UUID PRIMARY KEY,
    message_id BIGINT REFERENCES messages(id),
    user_id BIGINT REFERENCES users(id),
    filename TEXT,
    content_type TEXT,
    storage_path TEXT,
    uploaded_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- Friends
CREATE TABLE friends
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user1_id BIGINT NOT NULL,
    user2_id BIGINT NOT NULL,
    status VARCHAR(8) DEFAULT 'PENDING' CHECK (status IN ('PENDING', 'ACCEPTED', 'REJECTED')),

    FOREIGN KEY (user1_id) REFERENCES users(id) ON DELETE SET NULL,
    FOREIGN KEY (user2_id) REFERENCES users(id) ON DELETE SET NULL,

    -- Unique constraint to avoid duplicate entries and ensure mutual friendship
    UNIQUE (user1_id, user2_id),
    CHECK (user1_id < user2_id)
);

-- Indexes for user1_id and user2_id
CREATE INDEX idx_user1_id ON friends (user1_id);
CREATE INDEX idx_user2_id ON friends (user2_id);

-- Private Messages
CREATE TABLE private_messages
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    sender_id BIGINT NOT NULL,
    receiver_id BIGINT NOT NULL,
    message_text TEXT,
    message_datetime TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (receiver_id) REFERENCES users(id) ON DELETE CASCADE
);
